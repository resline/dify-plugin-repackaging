version: '3.8'

services:
  backend:
    build: ./backend
    container_name: dify-repack-backend
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - BACKEND_CORS_ORIGINS=["http://localhost:3000","http://localhost","http://localhost:80"]
      - TEMP_DIR=/app/temp
      - SCRIPTS_DIR=/app/scripts
    volumes:
      - ./temp:/app/temp
      - ./backend/scripts:/app/scripts:ro
    depends_on:
      - redis
    networks:
      - app-network

  worker:
    build: ./backend
    container_name: dify-repack-worker
    command: celery -A app.workers.celery_app worker --loglevel=info
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - TEMP_DIR=/app/temp
      - SCRIPTS_DIR=/app/scripts
    volumes:
      - ./temp:/app/temp
      - ./backend/scripts:/app/scripts:ro
    depends_on:
      - redis
      - backend
    networks:
      - app-network

  celery-beat:
    build: ./backend
    container_name: dify-repack-beat
    command: celery -A app.workers.celery_app beat --loglevel=info
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - backend
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: dify-repack-frontend
    depends_on:
      - backend
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: dify-repack-redis
    volumes:
      - redis-data:/data
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: dify-repack-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge